% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/networktree.R
\name{networktree.formula}
\alias{networktree.formula}
\title{Tree model (partitioning) with networks at the end of branches}
\usage{
\method{networktree}{formula}(formula, data, type = c("cor", "pcor",
  "EBICglasso"), method = c("ModelBased", "Conditional"), na.action,
  splitBy = "network", ...)
}
\arguments{
\item{formula}{A symbolic description of the model to be fit. This
should either be of type \code{y1 + y2 + y3 ~ x1 + x2} with node
vectors \code{y1}, \code{y2}, and \code{y3} or \code{y ~ x1 + x2}
with a matrix response {y}. \code{x1} and \code{x2} are used as
partitioning variables.}

\item{data}{a data frame containing the variables in the model}

\item{type}{the type of network to compute. Can be "cor", "pcor", or "EBICglasso"}

\item{method}{"ModelBased" or "Conditional"}

\item{na.action}{a function which indicates what should happen when the data
contain missing values (\code{NA}s).}

\item{splitBy}{if "network", splits only by the correlations between variables.
if "data", considers means and variances of each variable (i.e., mu and sigma)}

\item{...}{arguments passed to \code{\link[partykit]{mob_control}}}
}
\description{
Computes a tree model with networks at the end of branches. Can use
model-based recursive partitioning or conditional inference.
}
\details{
Wraps the mob() and ctree() functions from the partykit package.
}
\examples{
\donttest{
set.seed(1)
d <- data.frame(trend = 1:200, foo = runif(200, -1, 1))
d <- cbind(d, rbind(
  rmvnorm(100, mean = c(0, 0, 0),
          sigma = matrix(c(1, 0.5, 0.5, 0.5, 1, 0.5, 0.5, 0.5, 1), ncol = 3)),
  rmvnorm(100, mean = c(0, 0, 0),
          sigma = matrix(c(1, 0, 0.5, 0, 1, 0.5, 0.5, 0.5, 1), ncol = 3))
))
colnames(d)[3:5] <- paste0("y", 1:3)

## Now use the function
tree1 <- networktree(formula = y1 + y2 + y3 ~ trend + foo, data=d)

}
}
