% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/networktree-package.r, R/networktree.R
\docType{package}
\name{networktree}
\alias{networktree}
\alias{networktree-package}
\alias{networktree}
\title{networktree.}
\usage{
networktree(data, splitVars, type = c("cor", "pcor", "EBICglasso"),
  method = c("ModelBased", "Conditional"), weights = NULL, ...)
}
\arguments{
\item{data}{the cross-sectional dataset from which to compute the network}

\item{splitVars}{the variables with which to test split the network. Can be vector, matrix, or dataframe}

\item{type}{the type of network to compute. Can be "cor", "pcor", or "EBICglasso"}

\item{method}{"ModelBased" or "Conditional"}

\item{weights}{weights}

\item{...}{additional arguments passed cortrafo}
}
\value{
\code{\link{networktree}} returns a list of class "\code{}" which contains:
}
\description{
Recursive partitioning (tree models) of psychometric networks

Computes a tree model with networks at the end of branches. Can use
model-based recursive partitioning (see networktreeModelBased) or
conditional inference (see networktreeConditional).
}
\details{
Includes methods for creating tree models with networks on the final branches.
The methods use recursive partitioning on a multivariate normal distribution estimated
from the data in order to separate distinct network from one another.

For a complete list of functions, use library(help = "networktree")

For a complete list of vignettes, use browseVignettes("networktree")

Wraps the mob() and ctree() functions from the partykit package.

For interfaces more consistent with the partykit standard, see
the mobNetwork() and ctreeNetwork() functions
}
\examples{
\donttest{
set.seed(1)
d <- data.frame(trend = 1:200, foo = runif(200, -1, 1))
d <- cbind(d, rbind(
  rmvnorm(100, mean = c(0, 0, 0),
          sigma = matrix(c(1, 0.5, 0.5, 0.5, 1, 0.5, 0.5, 0.5, 1), ncol = 3)),
  rmvnorm(100, mean = c(0, 0, 0),
          sigma = matrix(c(1, 0, 0.5, 0, 1, 0.5, 0.5, 0.5, 1), ncol = 3))
))
colnames(d)[3:5] <- paste0("y", 1:3)

## Now use the function
tree1 <- networktree(netdata=d[,3:5], splitVars=d[,1:2])

}
}
\author{
Payton J. Jones, Thorsten Simon, & Achim Zeleis
}
